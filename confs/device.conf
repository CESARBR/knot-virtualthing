# This is an example file of how this configuration file parameters should be
# filled.

########################## KNoT Thing Parameters ###############################

[KNoTThing]

Name = Thing Name
DeviceId = 1

# KNoT Virtual Thing supports Modbus RTU, Modbus TCP, Ethernet/IP and OPC UA
DeviceProtocolType = ETHERNET/IP
# DeviceProtocolType = MODBUS
# DeviceProtocolType = OPC_UA

# ATTENTION: Modbus connection type is defined by URL prefix and Ethernet/IP
# does not need prefix.
# Modbus TCP prefix - tcp://
# Modbus RTU prefix - serial://
DriverURL = 127.0.0.1
# DriverURL = tcp://127.0.0.1:502
# DriverURL = serial:///dev/ttyUSB0:115200,N,8,1
# DriverURL = opc.tcp://localhost:4840/

# ATTENTION: It is possible for you to identify what type of endianness
# is being used.
# ENDIANNESS_TYPE_BIG_ENDIAN		HEX: 0x01	INT: 1
# ENDIANNESS_TYPE_MID_BIG_ENDIAN	HEX: 0x02	INT: 2
# ENDIANNESS_TYPE_LITTLE_ENDIAN		HEX: 0x03	INT: 3
# ENDIANNESS_TYPE_MID_LITTLE_ENDIAN	HEX: 0x04	INT: 4
TypeEndianness = 1

#ATTETION: Only for ethernet/ip you need to specify the PLC type.
# It is possible to see the models available in the link below:
# https://github.com/libplctag/libplctag/wiki/Tag-String-Attributes
# AB-Specific Attributes -> plc
DeviceNameType = ControlLogix

#ATTETION: Only for OPC UA and if necessary.
DeviceLogin = KnoT
DevicePassword = KNot12@

#ATTETION: Only for OPC UA and if necessary. You can just use TRUE or FALSE.
DRIVER_SECURITY = TRUE

####################### KNoT Data Items Parameters #############################

# Following the notation to use [DataItem_x] as the group name for a new data
# item. Use the same "x" number as this data item sensor id.

[DataItem_0]

# ATTENTION: Sensor Id, Value Type, Unit and Type Id ONLY supports integers
# values.
# ATTENTION: For the SchemaSensorId it is necessary to maintain an ascending
# order without gaps. For example: 0,1,2,3,4.
# The possible combinations of these parameters are specified in the link below:
# https://knot-devel.cesar.org.br/doc/thing/unit-type-value.html
# Data_Item_0 has the following specifications:
# KNOT_TYPE_ID_VOLTAGE		HEX: 0x0001	INT: 1
# KNOT_UNIT_VOLTAGE_V		HEX: 0x01	INT: 1
# KNOT_VALUE_TYPE_INT		HEX: 0x01	INT: 1
SchemaSensorId = 0
SchemaSensorName = KNoTSensor_0
SchemaTypeId = 1
SchemaUnit = 1
SchemaValueType = 1

# ATTENTION: Tag name, path and element size ONLY used for Ethernet/IP communication.
DataTagName = F8
DataIpPath = 1,0
DataIpElementSize = 1000

# ATTENTION: Namespace, Identifier Type and Identifier ONLY
# used for OPC UA communication. You can just use STRING, GUID, NUMERIC,
# and BYTESTRING in DataIdentifierType. For DataNameSpaceIndex you can
# only use numbers.
DataNameSpaceIndex = 1
DataIdentifierType = STRING
DataIdentifier = example.knot

# DataItem Address.
# ATTENTION: For EtherNet/IP address can be added directly in
# DataTagName and RegisterAddress will be 0.
# Possible values are:
# RegisterAddress = 0
# DataTagName = F8[1].1
RegisterAddress = 6

# Possible bit values are:
# 1 - bit
# 8 - byte
# 16 - uint16
# 32 - uint32
# 64 - uint64
# ATTENTION: Bit must be synchronized with Type ID for Modbus.
ValueTypeSize = 16


# ATTENTION: Only specify the event parameters that are going to be used in
# this data item.
# This data item will send a publish data event every 5 seconds or when the
# value is inferior or superior to lower or upper threshold, respectively.
EventLowerThreshold = 1000
EventUpperThreshold = 3000
EventTimeSec = 5

[DataItem_1]


DataTagName = F8
DataIpPath = 1,0
DataIpElementSize = 1000

RegisterAddress = 8

ValueTypeSize = 32

SchemaSensorId = 1
SchemaSensorName = KNoTSensor_1
SchemaTypeId = 65296
SchemaUnit = 1
SchemaValueType = 2

# This data item will send a publish data event every 5 seconds or when its
# value has changed.
EventTimeSec = 5
EventChange = 1

